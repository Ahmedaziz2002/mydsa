#include<stdio.h>

//pass by vale
/*In pass by value we pass a copy of the argument's value to the function.Any changes made to the function do not affect the original.*/

void modify(int x){
    x=10;
    printf("Modified value is %d\n",x);
}
int main(){
    int num=5;
    printf("NUmber before modification is %d\n",num);

    modify(num);

    printf("NUmber after modification is %d\n",num);
    return 0;
    //as you can see the modified value did not affect the number.
}#include<stdio.h>

//pass by reference
//c doesn't have direct mechanisms to pass by refence so we use pointers instead
//in pass by ref we copy the memory address of the argument.Changes made to the function affect the original.THis allows us to manipulate the code.

void swap(int *a,int *b){
    int temp=*a;
    *a=*b;
    *b=temp;
}

int main(){
    int x=10;
    int y=20;

    printf("values are x=%d and y=%d before swap\n",x,y);

    swap(&x,&y);

    printf("New values are x= %d and y=%d after swap\n",x,y);
    return 0;
}#include<stdio.h>

//pass by pointer .
//similar to pass by ref but uses explicitly pointers

void cube(int *a){
    *a = (*a)*(*a)*(*a);
}

int main(){
    int num=3;
    printf("Before cube number is %d\n",num);

    cube(&num);

    printf("After cube num is %d\n",num);

    return 0;
}